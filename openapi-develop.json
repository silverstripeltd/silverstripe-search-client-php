{
  "openapi": "3.1.0",
  "info": {
    "title": "BifrÃ¶st",
    "description": "\nBifrÃ¶st API ðŸŒˆ\n\nManaged search for Silverstripe Cloud\n",
    "termsOfService": "http://https://silverstripe.com/search#terms",
    "contact": {
      "name": "Silverstripe Ltd",
      "url": "https://silverstripe.com/search",
      "email": "search@silverstripe.com"
    },
    "version": "0.1.3"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "paths": {
    "/{engine_name}/click": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Post Click",
        "description": "Track which results were clicked after a query.\n\n**Body:**\n\n`query` (required)\n* The query that the user searched with.\n\n`document_id` (required)\n* The id of the document that was clicked on.\n\n`request_id` (optional)\n* The request id returned in the meta tag of a search API response.\n\n`tags` (optional)\n* Array of strings representing additional information you wish to track with the clickthrough. You may submit up to 16 tags, and each may be up to 64 characters in length.",
        "operationId": "post_click__engine_name__click_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "engine_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Your engine name (as provided by Silverstripe)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models__click__request__Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{engine_name}/documents": {
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "Post Documents",
        "description": "Create or update documents.\n\nDocuments are indexed asynchronously. There will be a processing delay before they are available to your Engine.\n\n**Key points to remember when creating documents:**\n\n* It is recommended that you provide your own `id` field, but If no `id` is provided, a unique `id` will be\n  generated.\n* A new document is created each time content is received without an `id` - beware duplicates!\n* A document will be updated - not created - if its `id` already exists within a document.\n\n**Processing file contents**\n\n* An `_attachment` field can be used to attach PDF and Docx files to your document.\n* The _attachment` field should contain a base 64 encoded string of binary.",
        "operationId": "post_documents__engine_name__documents_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "engine_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Your engine name (as provided by Silverstripe)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "number"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "examples": [
                    {
                      "id": "silverstripe_cms_model_sitetree_1",
                      "title": "Auckland Zoo",
                      "term_ids": [
                        1,
                        2,
                        5
                      ],
                      "location": "-36.8639680119916, 174.7199894180399",
                      "last_edited": "2024-06-14T13:53:44+12:00"
                    }
                  ]
                },
                "title": "Documents"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponsePostPatch"
                  },
                  "title": "Response Post Documents  Engine Name  Documents Post"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "documents"
        ],
        "summary": "Patch Documents",
        "description": "Update specific document fields by `id` and `field`.\n\nThere are a couple of limitations of the PATCH action:\n- The `id` is required and new fields cannot be created using `PATCH`!\n- processing file content is **not supported** via PATCH",
        "operationId": "patch_documents__engine_name__documents_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "engine_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Your engine name (as provided by Silverstripe)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "number"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "examples": [
                    {
                      "id": "silverstripe_cms_model_sitetree_1",
                      "title": "Auckland Zoo",
                      "term_ids": [
                        1,
                        2,
                        5
                      ],
                      "location": "-36.8639680119916, 174.7199894180399",
                      "last_edited": "2024-06-14T13:53:44+12:00"
                    }
                  ]
                },
                "title": "Documents"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponsePostPatch"
                  },
                  "title": "Response Patch Documents  Engine Name  Documents Patch"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "documents"
        ],
        "summary": "Delete Documents",
        "description": "Delete documents by `id`.",
        "operationId": "delete_documents__engine_name__documents_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "engine_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Your engine name (as provided by Silverstripe)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "examples": [
                  [
                    "park_zion",
                    "does_not_exist",
                    "park_yosemite"
                  ]
                ],
                "title": "Document Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDeleted"
                  },
                  "title": "Response Delete Documents  Engine Name  Documents Delete"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Get Documents",
        "description": "A paginated array of JSON objects representing documents.\n\n**Query parameters:**\n\n`ids` **(required)**\n* A parameterized query of document `id`. EG: ids=zion_park&ids=does_not_exist",
        "operationId": "get_documents__engine_name__documents_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "engine_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Your engine name (as provided by Silverstripe)"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "title": "Response Get Documents  Engine Name  Documents Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{engine_name}/documents/list": {
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "Post Documents List",
        "description": "**Body:**\n\n`page` (optional)\n* Object to delimit the pagination parameters.\n\n`page.size` (optional)\n* Number of results per page.\n* Must be greater than or equal to 1 and less than or equal to 100.\n* Defaults to 10.\n\n`page.current` (optional)\n* Page number of results to return.\n* Must be greater than or equal to 1 and less than or equal to 100.\n* Defaults to 1.",
        "operationId": "post_documents_list__engine_name__documents_list_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "engine_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Your engine name (as provided by Silverstripe)"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/NoTotals"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": {
                  "current": 1,
                  "size": 10
                },
                "title": "Page"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models__query__response__Response"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/engines": {
      "post": {
        "tags": [
          "engines"
        ],
        "summary": "Post Engines",
        "operationId": "post_engines_engines_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models__engines__response__Response"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/{engine_name}/query_suggestion": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Post Query Suggestion",
        "description": "Provide relevant query suggestions for incomplete queries. Also known as Autocomplete.\n\nOnly available on text fields.\n\n**Body:**\n\n`query` **(required)**\n* A partial query for which to receive suggestions.\n\n`types` (optional)\n* Specify the documents key within the types parameter to look for suggestions within certain text fields. Defaults to all text fields.\n\n`size` (optional)\n* Number of query suggestions to return. Must be between 1 and 20. Defaults to 10.",
        "operationId": "post_query_suggestion__engine_name__query_suggestion_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "engine_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Your engine name (as provided by Silverstripe)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models__query_suggestion__request__Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models__query_suggestion__response__Response"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{engine_name}/schema": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get Schema",
        "operationId": "get_schema__engine_name__schema_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "engine_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Your engine name (as provided by Silverstripe)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ValidatedField"
                    }
                  ],
                  "examples": [
                    {
                      "title": "text",
                      "content": "text",
                      "term_ids": "number",
                      "location": "geolocation",
                      "last_edited": "date"
                    }
                  ],
                  "title": "Response Get Schema  Engine Name  Schema Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "configuration"
        ],
        "summary": "Post Schema",
        "description": "**Field types:**\n\n* `text`\n* `number`\n* `date`\n    * Strings containing formatted dates, e.g. \"2015-01-01\" or \"2015/01/01 12:10:30\".\n    * A number representing seconds-since-the-epoch.\n* `geolocation`\n\n**Field names:**\n\n* Must contain a lowercase letter and may only contain lowercase letters, numbers, and underscores.\n* Must not contain whitespace or have a leading underscore.\n* Must not contain more than 64 characters.\n* Must not be any of the following reserved words:\n    * `id`\n    * `engine_id`\n    * `search_index_id`\n    * `highlight`\n    * `any`\n    * `all`\n    * `none`\n    * `or`\n    * `and`\n    * `not`\n* The following fields can be used, but must be of type `text`\n    * `body`\n* The following fields can be used, but must be of type `binary`\n    * `_attachment`",
        "operationId": "post_schema__engine_name__schema_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "engine_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Your engine name (as provided by Silverstripe)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ValidatedField"
                  }
                ],
                "examples": [
                  {
                    "title": "text",
                    "content": "text",
                    "term_ids": "number",
                    "location": "geolocation",
                    "last_edited": "date"
                  }
                ],
                "title": "Schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePost"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{engine_name}/search": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Post Search",
        "description": "Submit a search and receive a set of results with metadata.\n\n**Body:**\n\n`query` **(required)**\n* String or number to match.\n* The value '' (empty string) matches all documents.\n* The following Lucene query syntax is supported:\n    * double-quoted strings\n    * `+` and `-`\n    * `AND` and `NOT`\n\n`page` (optional)\n* Object to delimit the pagination parameters.\n\n`page.size` (optional)\n* Number of results per page.\n* Must be greater than or equal to 1 and less than or equal to 100.\n* Defaults to 10.\n\n`page.current` (optional)\n* Page number of results to return.\n* Must be greater than or equal to 1 and less than or equal to 100.\n* Defaults to 1.\n\n`sort` (optional)\n* Sort your results in an order other than document score.\n* JSON object where the key is the field you wish to sort on, and the value is `asc` or `desc`.\n* Multiple keys/value pairs can be provided if you wish to sort against multiple fields.\n* The following sorting options are available based on field type:\n    * `text`: Alphanumerically, case-sensitive.\n    * `number`: Numerically.\n    * `date`: Historically.\n    * `geolocation`: By distance to a provided geographical point.\n\n`facets` (optional)\n* Create value and range facets.\n* The facets key opens up the object where you define your facet field.\n* The following facet types are available based on field type:\n    * `text`: Value facet\n    * `number`: Value facet, Range facet\n    * `date`: Value facet, Range facet\n    * `geolocation`: Range facet\n\n`facets.{field_key}` **(required)**\n* The field from your schema upon which to apply your facet.\n\n`facets.{field_key}.type` **(required)**\n* Type of facet, in this case it will be value.\n\n`facets.{field_key}.name` (optional)\n* Name given to facet.\n\n`facets.{field_key}.size` (optional)\n* How many facets would you like to return?\n* Can be between 1 and 250.\n* Defaults to 10.\n\n`facets.{field_key}.sort` (optional)\n* JSON object where the key is either `count` or `value` and the value is `asc` or `desc`.\n* Defaults to descending `count`.\n\n`filters` (optional)\n* Apply conditions to field values to filter results.\n* The following filters are available based on field type:\n    * `text`: Value filter\n    * `number`: Value filter, Range filter\n    * `date`: Value filter, Range filter\n    * `geolocation`: Geo filter\n\n`search_fields` (optional)\n* The search_fields parameter restricts a query to search only specific fields.\n* Restricting fields will result in faster queries, especially for schemas with many text fields.\n* Only available within text fields.\n\n`search_field.{field_key}` **(required)**\n* {field_key} must be a valid field in your documents, the value should be a json object with an (optional) `weight`\n  key/value (see below)\n\n`search_field.{field_key}.weight` (optional)\n* Weight is given between 10 (most relevant) to 1 (least relevant). You can also set weight to 0 to make the field\n  unsearchable at query time.\n\n`result_fields` (optional)\n* Change the fields which appear in search results and how their values are rendered.\n\n`result_fields.{field_key}` (optional)\n* {field_key} must be a valid field in your documents, the value should be a json object with an (optional) `raw`\n  and/or `snippet` keys (see below)\n\n`result_fields.{field_key}.raw` (optional)\n* An exact representation of the value within a field. And it is exact! It is not HTML escaped.\n* A json object with an optional `size` key (see below)\n\n`result_fields.{field_key}.raw.size` (optional)\n* Length of the return value. Only can be used on text fields.\n* Must be at least 20.\n* Defaults to the entire text field.\n* If given for a different field type other than text, it will be silently ignored.\n\n`result_fields.{field_key}.snippet` (optional)\n* The query match will be wrapped in `<em></em>` tags, for highlighting, if a match exists.\n* A json object with optional `size` and `fallback` keys (see below)\n\n`result_fields.{field_key}.snippet.size` (optional)\n* Character length of the snippet returned.\n* Must be at least 20.\n* Defaults to 100.\n\n`result_fields.{field_key}.snippet.fallback` (optional)\n* If true, return the raw text field if no snippet is found. If false, only use snippets.\n\n`analytics` (optional)\n* Object to delimit the analytics parameters.\n\n`analytics.tags` **(required)**\n* Array of strings representing the tags youâ€™d like to apply to the query.\n* You may submit up to 16 tags, and each may be up to 64 characters in length.\n\n`record_analytics` (optional)\n* If `true`, generates an analytics query event for the search request.\n* Defaults to `true`.",
        "operationId": "post_search__engine_name__search_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "engine_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Your engine name (as provided by Silverstripe)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models__search__request__Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/models__search__response__Response"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Post Search  Engine Name  Search Post"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{engine_name}/spelling_suggestion": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Post Spelling Suggestion",
        "description": "Provide relevant spelling suggestions for queries. Not to be confused with autocomplete.\n\nOnly available on text fields.\n\n**Body:**\n\n`query` **(required)**\n* A query for which to receive spelling suggestions.\n\n`fields` **(required)**\n* Specify the fields within your documents that you would like spelling suggestions from. At least one field is\n  required.\n\n`size` (optional)\n* Number of spelling suggestions to return. Must be between 1 and 10. Defaults to 1.",
        "operationId": "post_spelling_suggestion__engine_name__spelling_suggestion_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "engine_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Your engine name (as provided by Silverstripe)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models__spelling_suggestion__request__Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models__spelling_suggestion__response__Response"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Date": {
        "properties": {
          "from": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From"
          },
          "to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "To"
          }
        },
        "type": "object",
        "title": "Date"
      },
      "Document": {
        "additionalProperties": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "type": "array"
            }
          ]
        },
        "type": "object",
        "title": "Document",
        "examples": [
          {
            "acres": "147237.02",
            "date_established": "1919-11-19T06:00:00Z",
            "description": "Lorem ipsum.",
            "id": "park_zion",
            "location": "37.3,-113.05",
            "nps_link": "https://www.nps.gov/zion/index.htm",
            "square_km": "595.8",
            "states": [
              "Utah"
            ],
            "title": "Zion",
            "visitors": "4295127",
            "world_heritage_site": "false"
          }
        ]
      },
      "DocumentResponse": {
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/models__document__document_response__Meta"
            },
            {
              "$ref": "#/components/schemas/Field"
            }
          ]
        },
        "type": "object",
        "title": "DocumentResponse",
        "examples": [
          {
            "_meta": {
              "engine": "search-parks-main",
              "id": "park_everglades",
              "score": 1396363.1
            },
            "acres": {
              "raw": 1508968.1
            },
            "date_established": {
              "raw": "1934-05-30T05:00:00+00:00"
            },
            "description": {
              "raw": "The Everglades are the largest tropical wilderness in the United States."
            },
            "id": {
              "raw": "park_everglades"
            },
            "location": {
              "raw": "25.32,-80.93"
            },
            "nps_link": {
              "raw": "https://www.nps.gov/ever/index.htm"
            },
            "square_km": {
              "raw": 6106.6
            },
            "states": {
              "raw": [
                "Florida"
              ]
            },
            "title": {
              "raw": "Everglades"
            },
            "visitors": {
              "raw": 930907
            },
            "world_heritage_site": {
              "raw": "true"
            }
          }
        ]
      },
      "Field": {
        "properties": {
          "raw": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raw"
          },
          "snippet": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Snippet"
          }
        },
        "type": "object",
        "title": "Field"
      },
      "FieldModel": {
        "properties": {
          "raw": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RawField"
              },
              {
                "type": "null"
              }
            ]
          },
          "snippet": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SnippetField"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "FieldModel"
      },
      "FilterObject": {
        "properties": {
          "all": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Date"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "items": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "number"
                            }
                          ]
                        },
                        "type": "array"
                      }
                    ]
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "All"
          },
          "any": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Date"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "items": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "number"
                            }
                          ]
                        },
                        "type": "array"
                      }
                    ]
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Any"
          },
          "none": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Date"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "items": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "number"
                            }
                          ]
                        },
                        "type": "array"
                      }
                    ]
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "None"
          }
        },
        "type": "object",
        "title": "FilterObject"
      },
      "FilterObjectLevel1": {
        "properties": {
          "all": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/FilterObjectLevel2"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "All"
          },
          "any": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/FilterObjectLevel2"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Any"
          },
          "none": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/FilterObjectLevel2"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "None"
          }
        },
        "type": "object",
        "title": "FilterObjectLevel1"
      },
      "FilterObjectLevel2": {
        "properties": {
          "all": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/FilterObjectLevel3"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "All"
          },
          "any": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/FilterObjectLevel3"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Any"
          },
          "none": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/FilterObjectLevel3"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "None"
          }
        },
        "type": "object",
        "title": "FilterObjectLevel2"
      },
      "FilterObjectLevel3": {
        "properties": {
          "all": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FilterObject"
                    },
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "All"
          },
          "any": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FilterObject"
                    },
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Any"
          },
          "none": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FilterObject"
                    },
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "None"
          }
        },
        "type": "object",
        "title": "FilterObjectLevel3"
      },
      "Filters": {
        "properties": {
          "all": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/FilterObjectLevel1"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "All"
          },
          "any": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/FilterObjectLevel1"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Any"
          },
          "none": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/FilterObjectLevel1"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "None"
          }
        },
        "type": "object",
        "title": "Filters",
        "examples": [
          {
            "all": [
              {
                "date": {
                  "from": "2018-07-02",
                  "to": "2018-07-02"
                }
              },
              {
                "states": "Washington"
              },
              {
                "states": [
                  "Washington",
                  "Idaho"
                ]
              }
            ],
            "any": [
              {
                "date": {
                  "from": "2018-07-02",
                  "to": "2018-07-02"
                }
              },
              {
                "states": "Washington"
              },
              {
                "states": [
                  "Washington",
                  "Idaho"
                ]
              }
            ],
            "none": [
              {
                "date": {
                  "from": "2018-07-02",
                  "to": "2018-07-02"
                }
              },
              {
                "states": "Washington"
              },
              {
                "states": [
                  "Washington",
                  "Idaho"
                ]
              }
            ]
          }
        ]
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "NoTotals": {
        "properties": {
          "current": {
            "type": "integer",
            "title": "",
            "description": "Page number of results to return. Must be greater than or equal to 1 and less than or equal to \n        100. Defaults to 1.",
            "default": 1,
            "examples": [
              1
            ]
          },
          "size": {
            "type": "integer",
            "title": "",
            "description": "Number of results per page. Must be greater than or equal to 1 and less than or equal to 1000. \n        Defaults to 10.",
            "default": 10,
            "examples": [
              5
            ]
          }
        },
        "type": "object",
        "title": "NoTotals"
      },
      "RawField": {
        "properties": {
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size",
            "description": "Length of the return value. Only can be used on text fields. Must be at least 20; defaults to \n        the entire text field. If given for a different field type other than text, it will be silently ignored."
          }
        },
        "type": "object",
        "title": "RawField"
      },
      "ResponseDeleted": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "examples": [
              "park_zion"
            ]
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "examples": [
              true
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "deleted"
        ],
        "title": "ResponseDeleted"
      },
      "ResponsePost": {
        "properties": {
          "acknowledged": {
            "type": "boolean",
            "title": "Acknowledged",
            "examples": [
              true
            ]
          }
        },
        "type": "object",
        "required": [
          "acknowledged"
        ],
        "title": "ResponsePost"
      },
      "ResponsePostPatch": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "errors": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "ResponsePostPatch",
        "examples": [
          {
            "errors": [],
            "id": "park_zion"
          }
        ]
      },
      "ResultFields": {
        "additionalProperties": {
          "$ref": "#/components/schemas/FieldModel"
        },
        "type": "object",
        "title": "ResultFields",
        "examples": [
          {
            "description": {
              "raw": {
                "size": 200
              },
              "snippet": {
                "size": 100
              }
            },
            "states": {
              "raw": {},
              "snippet": {
                "fallback": false,
                "size": 20
              }
            },
            "title": {
              "snippet": {
                "fallback": true,
                "size": 20
              }
            }
          }
        ]
      },
      "SearchFields": {
        "anyOf": [
          {
            "additionalProperties": {
              "$ref": "#/components/schemas/Weight"
            },
            "type": "object"
          },
          {
            "type": "null"
          }
        ],
        "title": "SearchFields",
        "examples": [
          {
            "description": {
              "weight": 5
            },
            "states": {
              "weight": 3
            },
            "title": {
              "weight": 10
            }
          }
        ]
      },
      "SnippetField": {
        "properties": {
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size",
            "description": "Character length of the snippet returned. Must be at least 20; defaults to 100."
          },
          "fallback": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fallback",
            "description": "If true, return the raw text field if no snippet is found. If false, only use snippets.\n        Defaults to true.\n        ",
            "default": true
          }
        },
        "type": "object",
        "title": "SnippetField"
      },
      "Sort": {
        "anyOf": [
          {
            "items": {
              "additionalProperties": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ]
              },
              "type": "object"
            },
            "type": "array"
          },
          {
            "type": "null"
          }
        ],
        "title": "Sort",
        "examples": [
          [
            {
              "_score": "desc"
            },
            {
              "title": "desc"
            }
          ]
        ]
      },
      "Tags": {
        "properties": {
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "The Search endpoint can be used to attach tags to your documents. One or more tags can be applied \n        to filter results via the API or within your analytics dashboard.",
            "examples": [
              [
                "desktop",
                "mobile"
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "tags"
        ],
        "title": "Tags"
      },
      "ValidatedField": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object",
        "title": "ValidatedField"
      },
      "ValidatedFields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "title": "ValidatedFields"
      },
      "ValidatedSize": {
        "type": "integer",
        "title": "ValidatedSize"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "Weight": {
        "properties": {
          "weight": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          }
        },
        "type": "object",
        "title": "Weight"
      },
      "WithTotals": {
        "properties": {
          "current": {
            "type": "integer",
            "title": "Current",
            "description": "Number representing the current page of results.",
            "examples": [
              1
            ]
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number representing the results per page.",
            "examples": [
              5
            ]
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages",
            "description": "Number representing the total pages of results.\n        Value is 0 when you paginate beyond 10,000 results.",
            "examples": [
              5
            ]
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results",
            "description": "Number representing the total results across all pages.\n        The values 0 through 9999 are exact counts.\n        The value 10000 is a pseudo keyword representing greater than or equal to 10,000 results.",
            "examples": [
              22
            ]
          }
        },
        "type": "object",
        "required": [
          "current",
          "size",
          "total_pages",
          "total_results"
        ],
        "title": "WithTotals"
      },
      "models__click__request__Request": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "query",
          "document_id"
        ],
        "title": "Request",
        "examples": [
          {
            "document_id": "park_zion",
            "query": "everglade",
            "request_id": "e4c4dea0bd7ad3d2f676575ef16dc7d2",
            "tags": [
              "mobile",
              "desktop"
            ]
          }
        ]
      },
      "models__document__document_response__Meta": {
        "properties": {
          "score": {
            "type": "number",
            "title": "Score"
          },
          "engine": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Engine"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "score"
        ],
        "title": "Meta"
      },
      "models__engines__engine__Engine": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "search-national-parks-demo"
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Engine"
      },
      "models__engines__response__Response": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/models__engines__engine__Engine"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "Response"
      },
      "models__query__response__Meta": {
        "properties": {
          "alerts": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alerts"
          },
          "page": {
            "$ref": "#/components/schemas/WithTotals"
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id"
          },
          "warnings": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warnings"
          }
        },
        "type": "object",
        "required": [
          "page"
        ],
        "title": "Meta"
      },
      "models__query__response__Response": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/models__query__response__Meta"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "meta",
          "results"
        ],
        "title": "Response"
      },
      "models__query_suggestion__request__Request": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "A partial query for which to receive suggestions.",
            "examples": [
              "car"
            ]
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size",
            "description": "Number of query suggestions to return. Must be between 1 and 20. Defaults to 10.",
            "examples": [
              4
            ]
          },
          "fields": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields",
            "description": "Specify the document fields to look for suggestions within. Defaults to all text fields.",
            "examples": [
              [
                "title",
                "content"
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "Request"
      },
      "models__query_suggestion__response__Response": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/Field"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "Response",
        "examples": [
          {
            "results": [
              {
                "raw": "carl's"
              },
              {
                "raw": "carl's caverns"
              },
              {
                "raw": "carolina"
              }
            ]
          }
        ]
      },
      "models__search__request__Request": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "examples": [
              "lorem"
            ]
          },
          "sort": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Sort"
              },
              {
                "type": "null"
              }
            ]
          },
          "page": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NoTotals"
              },
              {
                "type": "null"
              }
            ]
          },
          "search_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SearchFields"
              },
              {
                "type": "null"
              }
            ]
          },
          "result_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResultFields"
              },
              {
                "type": "null"
              }
            ]
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Filters"
              },
              {
                "type": "null"
              }
            ]
          },
          "analytics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "Request"
      },
      "models__search__response__Engine": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "title": "Engine"
      },
      "models__search__response__Meta": {
        "properties": {
          "alerts": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alerts",
            "default": []
          },
          "warnings": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warnings",
            "default": []
          },
          "precision": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Precision"
          },
          "engine": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/models__search__response__Engine"
              },
              {
                "type": "null"
              }
            ]
          },
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "page": {
            "$ref": "#/components/schemas/WithTotals"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "page"
        ],
        "title": "Meta"
      },
      "models__search__response__Response": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/models__search__response__Meta"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/DocumentResponse"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "meta",
          "results"
        ],
        "title": "Response"
      },
      "models__spelling_suggestion__request__Request": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "A query for which to receive spelling suggestions.",
            "examples": [
              "caros"
            ]
          },
          "size": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ValidatedSize"
              },
              {
                "type": "null"
              }
            ],
            "description": "Number of spelling suggestions to return. Must be between 1 and 10. Defaults to 1.",
            "default": 1,
            "examples": [
              4
            ]
          },
          "fields": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ValidatedFields"
              }
            ],
            "description": "Specify the document fields to look for suggestions within. At least 1 field is required.",
            "examples": [
              [
                "title",
                "content"
              ]
            ]
          },
          "formatted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Formatted",
            "description": "Whether you would like a 'snippet' field to be returned with each of your results.",
            "default": false,
            "examples": [
              true
            ]
          }
        },
        "type": "object",
        "required": [
          "query",
          "fields"
        ],
        "title": "Request"
      },
      "models__spelling_suggestion__response__Response": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/Field"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "Response",
        "examples": [
          {
            "results": [
              {
                "raw": "carl's",
                "snippet": "<em>carl's</em>"
              },
              {
                "raw": "carolina",
                "snippet": "<em>carolina</em>"
              }
            ]
          }
        ]
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
